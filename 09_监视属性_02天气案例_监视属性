<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="UTF-8">
      <title>天气案例_监视属性</title>
    <!--    引入Vue -->
    <script type="text/javascript" src="../js/vue.js"></script>
  </head>
  <body>
    <!--
        监视属性watch：
          1.当被就i按时的属性发生变化时，回掉函数自动调用，进行相关操作
          2.见识的属性必须存在，才能进行监视！！
          3.监视的两种写法：
             （1）.new Vue时传入watch配置
             （2）.通过vm.$watch监视
     -->
    <!--  准备好一个容器-->
    <div id="demo">
      <h2>今天天气很{{info}}</h2>
      <!-- 绑定事件的时候：@xxx="yyy"  yyy可以写一些简单的语句-->
      <!-- <button @click="isHot = !isHot">切换天气</button>-->
      <button @click="changeWeather">切换天气</button>
    </div>
  </body>

  <script type="text/javascript">
    Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示

    const vm = new Vue({
      el:'#demo',
      data:{
          isHot:true,
          },
      computed:{
          info(){
            return this.isHot ? '炎热' : '凉爽'
          }
        },
      methods:{
        changeWeather(){
          this.isHot = !this.isHot
        }
      },
      // watch:{
      //   isHot:{
      //     immediate:true, //默认false,初始化时让handler调用一下
      //     //handler什么时候调用？当isHot发生修改时。
      //     handler(newValue,oldValue){
      //       console.log('isHot被修改了',newValue,oldValue)
      //     }
      //   }
      // }
    })

    vm.$watch('isHot',{
      immediate:true,
      handler(newValue,oldValue){
      console.log('isHot被修改了',newValue,oldValue)
      }
    })
  </script>
</html>
