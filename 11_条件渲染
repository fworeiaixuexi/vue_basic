<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="UTF-8">
      <title>条件渲染</title>
    <!--    引入Vue -->
    <script type="text/javascript" src="../js/vue.js"></script>
  </head>
  <body>
    <!--
        条件渲染
            1.v-if
                写法：
                  （1）.v-if=“表达式”
                  （2）.v-else-if=“表达式”
                  （3）.v-else=“表达式”
            2.v-show
                写法：v-show=“表达式”
                适用于：切换频率较高的场景
                特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉
            3.备注：使用v-if时，元素可能无法获取到，而使用v-show一定可以获取到。
     -->
    <!--  准备好一个容器-->
    <div id="demo">
      <h2>当前的n值是{{n}}</h2>
      <button @click="n++">点我n+1</button>
      <!-- 使用v-show做条件渲染，频率高使用 -->
<!--       <h2 v-show="false">欢迎来到{{name}}学习</h2>-->
<!--      <h2 v-show="1===1">欢迎来到{{name}}学习</h2>-->

      <!-- 使用v-if做条件渲染，频率高低使用-->
<!--      <h2 v-if="false">欢迎来到{{name}}学习</h2>-->
<!--      <h2 v-if="1===1">欢迎来到{{name}}学习</h2>-->

      <!-- v-else 和 v-else-if -->
<!--      <div v-if="n===1">Angular</div>-->
<!--      <div v-else-if="n===2">React</div>-->
<!--      <div v-else-if="n===3">Vue</div>-->
<!--      <div v-else>44</div>-->

      <!-- v-if与template的配合使用 -->
      <template v-if="n===1">
        <h2>你好</h2>
        <h2>尚硅谷</h2>
        <h2>北京</h2>
      </template>

    </div>
  </body>

  <script type="text/javascript">
    Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示

    new Vue({
        el:'#demo',
        data:{
          name:'尚硅谷',
          n:0
          }
    })
  </script>
</html>
